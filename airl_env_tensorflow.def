BootStrap: docker
From: nvidia/cuda:10.0-cudnn7-devel-ubuntu18.04
%labels
    Author a.cully@imperial.ac.uk
    Version v0.2
# Python
%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        python3 \
        python3-dev
    rm -rf /var/lib/apt/lists/*
%post
    cd /
    ln -s /usr/bin/python3 /usr/bin/python
# GNU compiler
%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        g++ \
        gcc \
        gfortran
    rm -rf /var/lib/apt/lists/*
%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        emacs \
        less \
        vim
    rm -rf /var/lib/apt/lists/*
# ====INSTALLING TENSORFLOW=====
%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        autoconf \
        automake \
        ca-certificates \
        curl \
        git \
        libcurl3-dev \
        libfreetype6-dev \
        libhdf5-serial-dev \
        libtool \
        libzmq3-dev \
        rsync \
        software-properties-common \
        unzip \
        zip \
        zlib1g-dev
    rm -rf /var/lib/apt/lists/*
# pip
%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        python3-pip \
        python3-setuptools \
        python3-wheel
    rm -rf /var/lib/apt/lists/*
%post
    cd /
    pip3 install Pillow h5py ipykernel jupyter keras_applications keras_preprocessing matplotlib mock numpy scipy sklearn future pandas
%post
    cd /
    find /usr/local/cuda-10.0/lib64/ -type f -name 'lib*_static.a' -not -name 'libcudart_static.a' -delete
    rm /usr/lib/x86_64-linux-gnu/libcudnn_static_v7.a
    echo "startup --batch" >>/etc/bazel.bazelrc
    echo "build --spawn_strategy=standalone --genrule_strategy=standalone">>/etc/bazel.bazelrc
    export BAZEL_VERSION=0.24.1
    mkdir /bazel && cd /bazel
    curl -H "User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh
    curl -H "User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE
    chmod +x bazel-*.sh
    ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh
    cd / && rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh
    python3 -m ipykernel.kernelspec
    mkdir -p /git && cd /git && git clone --depth=1 --branch r2.0 https://github.com/tensorflow/tensorflow.git tensorflow && cd -
    export CI_BUILD_PYTHON=python3
    export LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH
    export TF_NEED_CUDA=1
    export TF_NEED_TENSORRT=0
    export TF_CUDA_COMPUTE_CAPABILITIES=3.5,5.2,6.0,6.1,7.0,7.5
    export TF_CUDA_VERSION=10.0
    export TF_CUDNN_VERSION=7
    ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1
    cd /git/tensorflow
    LD_LIBRARY_PATH=/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH}     	tensorflow/tools/ci_build/builds/configured GPU     	bazel build --noshow_progress --experimental_ui_limit_console_output 1000000 -c opt --local_resources=20000,40,1.0 --copt=-Wcomment --copt=-Wmaybe-uninitialized --copt=-Wunknown-pragmas --copt=-mavx --config=cuda     	--cxxopt="-D_GLIBCXX_USE_CXX11_ABI=1"     	//tensorflow/tools/pip_package:build_pip_package //tensorflow:libtensorflow_cc.so //tensorflow:libtensorflow_framework.so
    rm /usr/local/cuda/lib64/stubs/libcuda.so.1
    bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/pip
    pip3 --no-cache-dir install --upgrade /tmp/pip/tensorflow-*.whl 
    mkdir -p                /workspace/include/google/tensorflow
    mkdir -p                /workspace/lib
    cp -r bazel-genfiles/*  /workspace/include/google/tensorflow/
    cp -r tensorflow        /workspace/include/google/tensorflow/
    find                    /workspace/include/google/tensorflow -type f  ! -name "*.h" -delete
    cp -r third_party       /workspace/include/google/tensorflow/
    cp bazel-bin/tensorflow/lib*.so /workspace/lib
    rm -rf /root/.cache 
    rm -rf /git/tensorflow
    rm -rf /tmp/pip
# ====DONE TENSORFLOW=====
